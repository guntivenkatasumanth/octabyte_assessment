pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')  
        IMAGE_NAME = 'sumanthgunti/sample-app'
        GIT_REPO = 'https://github.com/guntivenkatasumanth/static-cycle-website-jenkins-docker-.git'
        IMAGE_TAG = "dev-${env.BUILD_NUMBER}"
    }

    triggers {
        githubPush()
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'develop', url: "${env.GIT_REPO}"
            }
        }

        stage('Run Sample Tests') {
            steps {
                echo 'Running sample unit tests...'
                sh 'echo "Test: Homepage should load" && exit 0'
                sh 'echo "Test: CSS loaded successfully" && exit 0'
            }
        }

        stage('Security Scan (Trivy)') {
            steps {
                echo 'Running Trivy scan...'
                sh 'trivy fs --exit-code 0 --severity HIGH . || true'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
            }
        }

        stage('Push to DockerHub') {
            steps {
                echo "Pushing Docker image to DockerHub..."
                withDockerRegistry([ credentialsId: 'dockerhub-creds', url: '' ]) {
                    sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker push ${IMAGE_NAME}:latest"
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                sh """
                    docker stop staging-app || true
                    docker rm staging-app || true
                    docker run -d -p 8081:80 --name staging-app ${IMAGE_NAME}:latest
                """
            }
        }

        stage('Manual Approval for Production') {
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    input message: 'Approve deployment to Production?'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                sh """
                    docker stop prod-app || true
                    docker rm prod-app || true
                    docker run -d -p 80:80 --name prod-app ${IMAGE_NAME}:latest
                """
            }
        }
    }

    post {
        failure {
            mail to: 'sumanth26.sv@gmail.com',
                 subject: "Build Failed: ${env.JOB_NAME}",
                 body: "Something went wrong in ${env.JOB_NAME} #${env.BUILD_NUMBER}.\n\nCheck Jenkins for details."
        }
    }
}
